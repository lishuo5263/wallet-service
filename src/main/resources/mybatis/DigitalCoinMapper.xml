<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ecochain.ledger.mapper.DigitalCoinMapper" >
  <resultMap id="BaseResultMap" type="com.ecochain.ledger.model.DigitalCoin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="coin_name" property="coinName" jdbcType="VARCHAR" />
    <result column="coin_name_brief" property="coinNameBrief" jdbcType="VARCHAR" />
    <result column="coin_rate" property="coinRate" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, coin_name, coin_name_brief, coin_rate, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from digital_coin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getCoinPrice" parameterType="map" resultType="map">

    SELECT <include refid="Base_Column_List" /> FROM `digital_coin` where coin_name=#{coinName,jdbcType=VARCHAR};
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from digital_coin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ecochain.ledger.model.DigitalCoin" >
    insert into digital_coin (id, coin_name, coin_name_brief, 
      coin_rate, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{coinName,jdbcType=VARCHAR}, #{coinNameBrief,jdbcType=VARCHAR}, 
      #{coinRate,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ecochain.ledger.model.DigitalCoin" >
    insert into digital_coin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="coinName != null" >
        coin_name,
      </if>
      <if test="coinNameBrief != null" >
        coin_name_brief,
      </if>
      <if test="coinRate != null" >
        coin_rate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coinName != null" >
        #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="coinNameBrief != null" >
        #{coinNameBrief,jdbcType=VARCHAR},
      </if>
      <if test="coinRate != null" >
        #{coinRate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ecochain.ledger.model.DigitalCoin" >
    update digital_coin
    <set >
      <if test="coinName != null" >
        coin_name = #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="coinNameBrief != null" >
        coin_name_brief = #{coinNameBrief,jdbcType=VARCHAR},
      </if>
      <if test="coinRate != null" >
        coin_rate = #{coinRate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ecochain.ledger.model.DigitalCoin" >
    update digital_coin
    set coin_name = #{coinName,jdbcType=VARCHAR},
      coin_name_brief = #{coinNameBrief,jdbcType=VARCHAR},
      coin_rate = #{coinRate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>